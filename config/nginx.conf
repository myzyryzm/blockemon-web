user  root;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log  /usr/local/nginx/logs/error.log;
# error_log  /usr/local/nginx/logs/error.log warn;

pid        /usr/local/nginx/logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /usr/local/nginx/logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server_names_hash_bucket_size 256;

    server_tokens off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    
    # proxy_send_timeout 600;
    # proxy_read_timeout 600;
    # fastcgi_send_timeout 600;
    # fastcgi_read_timeout 600;
    # uwsgi_read_timeout 600;
    # uwsgi_connect_timeout 600;
    # send_timeout 600;

    # client_max_body_size 20M;

    upstream web {
        # ip_hash;
        server web:8080 fail_timeout=0;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Enable ModSecurity
        ModSecurityEnabled on;
        ModSecurityConfig /usr/local/nginx/conf/modsecurity.conf;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name blockemon-qa.us-west-2.elasticbeanstalk.com blockemon-prod.us-west-2.elasticbeanstalk.com localhost 127.0.0.1;
        ssl on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_certificate /usr/local/nginx/conf/certs/localhost.crt;
        ssl_certificate_key /usr/local/nginx/conf/certs/localhost.key;
        root /usr/share/nginx/html;

        access_log /usr/local/nginx/logs/access.ssl.log;
        error_log /usr/local/nginx/logs/error.ssl.log;
        
        # Enable ModSecurity
        ModSecurityEnabled on;
        ModSecurityConfig /usr/local/nginx/conf/modsecurity.conf;

        add_header Strict-Transport-Security "max-age=31536000" always; # might cause problems idk

        # gzip on;
        gzip_static on;    
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_proxied  any;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;

        location / {
            # idk if this is necessary
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_read_timeout 800s;
            proxy_connect_timeout 800s;
            proxy_send_timeout 800s;
            send_timeout  800s;
            keepalive_timeout 5;

            proxy_pass https://web/;
        }

        location /static/ {
            add_header Pragma public;
            # enable caching for 1 day on static files
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            alias /static/;
            expires 1d;
        }
        
        location /media/ {
            alias /media/;
            # enable caching for 1 day on media files
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            expires 1d;
        }
    }

}