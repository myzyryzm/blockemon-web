
user  root;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log  /usr/local/nginx/logs/error.log warn;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /usr/local/nginx/logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server_names_hash_bucket_size 256;

    upstream web {
        # ip_hash;
        server web:8000 fail_timeout=0;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Enable ModSecurity
        ModSecurityEnabled on;
        ModSecurityConfig /usr/local/nginx/conf/modsecurity.conf;
        # modsecurity on;
        # modsecurity_rules_file modsecurity.conf;

        # location /.well-known/acme-challenge/ {
        #     root /var/www/certbot;
        # }

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name evt-qa.us-west-2.elasticbeanstalk.com awseb-AWSEB-1DNTQB9YY09Q0-322305886.us-west-2.elb.amazonaws.com evt-prod.us-west-2.elasticbeanstalk.com awseb-AWSEB-5L2VUG1616Y3-168199490.us-west-2.elb.amazonaws.com localhost 127.0.0.1 learn.evt.ai evt.ai;
        ssl on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_certificate /usr/local/nginx/conf/certs/learn.evt.ai.crt;
        ssl_certificate_key /usr/local/nginx/conf/certs/learn.evt.ai.key;
        root /usr/share/nginx/html;

        access_log /usr/local/nginx/logs/access.ssl.log;
        error_log /usr/local/nginx/logs/error.ssl.log;
        
        # Enable ModSecurity
        ModSecurityEnabled on;
        ModSecurityConfig /usr/local/nginx/conf/modsecurity.conf;

        add_header Strict-Transport-Security "max-age=31536000" always; # might cause problems idk
        # return 200 'Let\'s Encrypt certificate successfully installed!';

        location / {
            # idk if this is necessary
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 75;
            proxy_read_timeout 300;
            proxy_pass https://web/;
        }

        location /static/ {
            alias /static/;
        }
        
        location /media/ {
            alias /media/;
        }
    }

}
